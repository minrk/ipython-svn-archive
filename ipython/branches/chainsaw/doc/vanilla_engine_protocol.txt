=============================================
Vanilla Engine to Controller Network Protocol
=============================================


	Cl:  EXECUTE a = 5
	Cr:  PICKLE error
	Cr:  ##########
	Cr:  EXECUTE FAIL ERROR 10
...
	Cr:  ERROR DONE
execute()
=========

::

	C: EXECUTE a = 5
	E: PICKLE result
	E: ########
	E: EXECUTE OK

::

	C: EXECUTE
	E: EXECUTE FAIL

push()
======

::

	C: PUSH
	E: PUSH READY
	C: PICKLE a
	C: #####
	C: [more data]
	C: PUSH DONE
	E: PUSH OK
	
	C: PUSH
	E: PUSH FAIL
	
Possible errors:

- One of the objects sent cannot be unpacked on the controller or kernel

Protocol errors:

- Key not specified.
- Unsupported data type
- PUSH READY not sent by E
- PUSH DONE not sent by C

::

	C: PUSH
	E: PUSH READY

	C: PICKLE key 30
	C: ########

	C: PUSH DONE
	E: PUSH OK

pull()
======

::

	C: PULL a,babycake,c

	E: PICKLE a
	E: ########
	
	E: PICKLE b
	E: ########

	E: ARRAY babycake
	E: shape
	E: ######buffer#####

	E: PULL OK

getResult()
===========

::

	C: GETRESULT 3
	E: PICKLE result
	E: ########
	E: GETRESULT OK

	C: GETRESULT
	E: PICKLE result
	E: ########
	E: GETRESULT OK
	
	C: GETRESULT 10000000sadf
	E: GETRESULT FAIL

reset()
=======

::

	C: RESET
	E: RESET OK

kill()
======

::

	C: KILL
	S: KILL OK

status()
========

::

	C: STATUS
	E: STATUS OK state









	E: PICKLE result
	E: ########

	E: PICKLE error
	E: ########
	
	E: EXECUTE OK

::

	C: EXECUTE
	E: EXECUTE FAIL

push()
======

::

	C: PUSH
	E: PUSH READY

	C: PICKLE a
	C: ####pickle######

	C: ARRAY b
	C: shape
	C: ####buffer####

	C: PICKLE c
	C: ###pickle##

	C: PUSH DONE
	E: PUSH OK

::

	C: PUSH
	E: PUSH READY

	C: PICKLE key 30
	C: ########

	C: PUSH DONE
	E: PUSH OK

pull()
======

::

	C: PULL a::babycake::c

	E: PICKLE a 30
	E: ########

	E: ARRAY babycake
	E: shape
	E: ######buffer#####

	E: PICKLE c 30
	E: #########

	E: PULL OK

getResult()
===========

::

	C: GETRESULT 3
	E: PICKLE result 24
	E: ########
	E: GETRESULT OK

	C: GETRESULT
	E: PICKLE result 24
	E: ########
	E: GETRESULT OK
	
	C: GETRESULT 10000000sadf
	E: GETRESULT FAIL

reset()
=======

::

	C: RESET
	E: RESET OK

kill()
======

::

	C: KILL
	S: KILL OK

status()
========

::

	C: STATUS
	E: STATUS OK state







