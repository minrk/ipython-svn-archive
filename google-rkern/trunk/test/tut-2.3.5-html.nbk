<notebook>
<head>
<meta content="/usr/local/bin/ipython" name="cmdline">
</meta>
</head>
<ipython-log id="default-log">
<input number="3">
from scipy import *
</input>
<input number="4">
p = poly1d([3,4,5])
</input>
<input number="5">
print p
</input>
<input number="6">
print p*p
</input>
<input number="7">
print p.integ(k=6)
</input>
<output number="8">
poly1d([6, 4])
</output>
<input number="8">
p.deriv()
</input>
<output number="9">
array([ 69, 100])
</output>
<input number="9">
p([4,5])
</input>
</ipython-log>
<sheet type="html">
<h1>Scipy Tutorial</h1>
<h2>Chapter 2</h2>
<h3>2.3.5 Polynomials</h3>

<p>There are two (interchangeable) ways to deal with 1-d polynomials in Scipy. The
first is to use the <strong>poly1d</strong> class in <strong>scipy_base</strong>. This class accepts
coefficients or polynomial roots to initialize a polynomial. The polynomial
object can then be manipulated in algebraic expressions, integrated,
differentiated, and evaluated. It even prints like a polynomial:
</p>

<ipython-block logid="default-log">
    <ipython-input number="3">
    </ipython-input>
    <ipython-input number="4">
    </ipython-input>
    <ipython-input number="5">
    </ipython-input>
    <ipython-stdout number="5">
    </ipython-stdout>
    <ipython-input number="6">
    </ipython-input>
    <ipython-stdout number="6">
    </ipython-stdout>
    <ipython-input number="7">
    </ipython-input>
    <ipython-stdout number="7">
    </ipython-stdout>
    <ipython-input number="8">
    </ipython-input>
    <ipython-output number="8">
    </ipython-output>
    <ipython-input number="9">
    </ipython-input>
    <ipython-output number="9">
    </ipython-output>
</ipython-block>

<p>The other way to handle polynomials is an array of coefficients with the first
element of the array giving the coefficient of the highest power. There are
explicit functions to add, subtract, multiply, divide, integrate, differentiate,
and evalute polynomials represented as sequences of coefficients.
</p>
</sheet>
</notebook>
