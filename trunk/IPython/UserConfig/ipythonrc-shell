# -*- Mode: Shell-Script -*-  Not really, but shows comments correctly
#***************************************************************************
# Configuration file for ipython -- ipythonrc format
#
# The format of this file is one of 'key value' lines.
# Lines containing only whitespace at the beginning and then a # are ignored
# as comments.  But comments can NOT be put on lines with data.
#***************************************************************************

# If this file is found in the user's ~/.ipython directory as ipythonrc-shell,
# it can be loaded by calling passing the '-profile shell' (or '-p shell')
# option to IPython.

# This profile loads a special input line filter to allow executing as shell
# commands any lines which begin with ~, . and /

# First load basic user configuration
include ipythonrc

# Configure prompt for more shell-like usage.

# Most bash-like escapes can be used to customize IPython's prompts, as well as
# a few additional ones which are IPython-specific.  All valid prompt escapes
# are described in detail in the Customization section of the IPython HTML/PDF
# manual.

prompt_in1 '\C_LightRed\u\C_LightBlue[\C_LightCyan\Y1\C_LightBlue]\C_LightGreen\#>'
prompt_in2 ' ..\D>'
prompt_out '<\#>'

# Here's a more complex prompt, showing the hostname and more path depth (\Y3)
#prompt_in1 '\C_LightRed\u\C_Blue@\C_Red\h\C_LightBlue[\C_LightCyan\Y3\C_LightBlue]\C_LightGreen\#>'

# Remove all blank lines in between prompts, like a normal shell.
separate_in 0
separate_out 0
separate_out2 0

# pysh.py does all of the proper configuration with real python code
execfile pysh.py
