08.16.2005:
	* Added deletion of cells

	* Added some testing framework. The tests are still to come
08.13.2005:
	* Changed format of notebook files. Now nbshell supports the
	docbook format.

	* Refactored methods for inserting cells in the notebook and added
	UI to use them

08.10.2005:
	* Added a type variable in each XXXDocumnetPlugin class the
	current types are 'python', 'plaintext' and 'figure'

	* Added a property currentcell in the sheet, whichs points to the
	active cell, and a property position in the python and plaintext
	plugins which returns the current position in the plugin.

	* Fixed a bug where the last input disappears after a save

	* Changed bahaviour. Now the cell with number 0 contains code
	which should not be displayed on the sheet. However the
	default_sheet method in notabene.notebook.Notebook does display
	this cell on the sheet.

	* Added support for the Matplotlib plotting library. Currently a
	function grab_figure(caption=None) is exposed in the user
	namespace which will get the current figure and place it after the
	input cell where grab_figure() was called. Check figuretest.nbk in
	the tests dirrectory. The API for adding other plotting libraries is
	not yet ready.
	
08.07.2005:
	* Added support for insertion of cells. Now when you are in a text
	cell and press Ctrl-I a code cell will be inserted at the place of
	the cursor. When in a code cell, a text cell is inserted

	* Fixed selection in code cells. Now only whole <ipython-cell>
	elements can be selected.

	* Added last inputs. Now for each log there is a cell with empty
	input which is displayed in the sheet.This cell always has the
	largest number in the log. It is added after the nbk file is
	loaded and removed before it is saved. It is used to append code
	to the log.

	* Added support for figures in the sheet.

	* Added directory tests for test notebooks
	
08.01.2005:
	* Changed behaviour to suport multiline inputs. Now when the user
	presses Enter, we simply insert a new line at the place of the
	cursor. Input is executed when the user presses Shift-Enter

	* Added support for editing and execution of arbitrary input
	cells.

07.31.2005:
	* Changed PythonPlugin to support the <ipython-cell type='...'>
	format of elements in <ipython-block>

	* Changed the algorithm by which outputs are displayed after a
	cell is rerun

	
	